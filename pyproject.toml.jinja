[build-system]
requires = ["setuptools>=64", "setuptools_scm>=8"]
build-backend = "setuptools.build_meta"

[project]
name = "{{project_name}}"
description = "{{project_descr}}"
authors = [
  {name="Michael Ekstrand", email="mdekstrand@drexel.edu"}
]
classifiers = [
  "License :: OSI Approved :: MIT License",
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Operating System :: OS Independent",
]
requires-python = ">= 3.10"
readme = "README.md"
license = { file = "LICENSE.md" }
dynamic = ["version"]
dependencies = [
]

[project.optional-dependencies]
dev = [
  "setuptools>=64",
  "setuptools_scm>=8",
  "build",
  "twine",
  "ruff",
  {%- if typecheck %}"pyright",
  {% endif -%}
  "copier",
  "sphinx-autobuild",
]
test = [
  "pytest >=7"
]
doc = [
  "sphinx >=4.2",
  "sphinxext-opengraph >= 0.5",
  "furo",
]

[project.urls]
Homepage = "https://{{project_name}}.lenksit.org"
GitHub = "https://github.com/lenskit/{{project_name}}"

# configure build tools
[tool.setuptools]
packages = ["{{package_name}}"]

[tool.setuptools_scm]
version_scheme = "release-branch-semver"

# settings for generating conda environments for dev & CI, when needed
[tool.pyproject2conda]
channels = ["conda-forge"]

[tool.ruff]
line-length = 100
target-version = "py310"
select = ["E", "F", "I"]
exclude = [
  ".git",
  "__pycache__",
  "docs/conf.py",
  "build",
  "dist",
]

[tool.ruff.lint.isort]
section-order = ["future", "standard-library", "third-party", "first-party", "local-folder"]

[tool.ruff.lint.isort.sections]
test = ["pytest", "hypothesis"]

[tool.mypy]
exclude = "^docs/"

[tool.pyright]
exclude = [
  "docs/*",
]
reportMissingImports = true
reportMissingTypeStubs = false
